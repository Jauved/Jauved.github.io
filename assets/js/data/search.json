[
  {
    "title": "半透明纯色物体描边",
    "url": "/posts/%E5%8D%8A%E9%80%8F%E6%98%8E%E7%BA%AF%E8%89%B2%E7%89%A9%E4%BD%93%E6%8F%8F%E8%BE%B9/",
    "categories": "Unity, Shader",
    "tags": "URP, Shader, 特效",
    "date": "2025-07-08 00:00:00 +0800",
    "content": "半透明纯色物体描边  00 要求     仅渲染纯色物体, 不采用贴图   不能渲染出半透明物体内部的结构   不要影响其他的半透明物体的排序   首先排除使用深度处理, 因为会影响到其他的半透明物体渲染. 其次, 由于是纯色物体, 那么仅考虑上色逻辑即可.  01 处理方法          拆分                      无论内部结构多复杂, 仅渲染一次         ..."
  },
  {
    "title": "贴图从UV中心点开始缩放和移动矩阵推导",
    "url": "/posts/%E8%B4%B4%E5%9B%BE%E4%BB%8EUV%E4%B8%AD%E5%BF%83%E7%82%B9%E5%BC%80%E5%A7%8B%E7%BC%A9%E6%94%BE%E5%92%8C%E7%A7%BB%E5%8A%A8%E7%9F%A9%E9%98%B5%E6%8E%A8%E5%AF%BC/",
    "categories": "URP, 渲染",
    "tags": "URP, 渲染, 矩阵, Unity",
    "date": "2025-05-21 00:00:00 +0800",
    "content": "贴图从UV中心点开始缩放和移动矩阵推导  00 通常的UV缩放和移动  在shaderlab着色器编程中, 一般会用类似如下伪代码的形式来缩放和移动uv, 最终形成缩放和移动图像的目的  float4 _textureName_ST ... float2 uvScaleTransform = TRANSFORM_TEX(uv, _textureName); ... #define TRANS..."
  },
  {
    "title": "Unity中的矩阵",
    "url": "/posts/Unity%E4%B8%AD%E7%9A%84%E7%9F%A9%E9%98%B5/",
    "categories": "Unity, 渲染",
    "tags": "URP, Shader, 矩阵",
    "date": "2025-05-16 00:00:00 +0800",
    "content": "Unity中的矩阵  00 坐标变换, 前置信息与约定  首先，将三维点 $p=(x,y,z)$ 表示为齐次坐标向量：  [{P} \begin{pmatrix} x \[4pt] y \[4pt] z \[4pt] 1 \end{pmatrix}]  构造在各轴方向上分别平移 $(t_x,t_y,t_z)$ 的 $4\times4 $平移矩阵：  [T(t_x,t_y,t_z) \begi..."
  },
  {
    "title": "[LookDev开发] 加入NewtonsoftJson序列化",
    "url": "/posts/LookDev%E5%BC%80%E5%8F%91-%E5%8A%A0%E5%85%A5NewtonsoftJson%E5%BA%8F%E5%88%97%E5%8C%96/",
    "categories": "Unity, 编辑器",
    "tags": "Unity, lookdev, 编辑器, 自定义",
    "date": "2025-05-14 00:00:00 +0800",
    "content": "[LookDev开发] 加入NewtonsoftJson序列化  原理  ScriptableObject对Unity强依赖, 而某些数据的处理并不想与Unity绑定. 所以需要引入Newtonsoft Json的包.  代码  在manifest.json中加入如下代码即可, 然后正常按照Newtonsoft Json的调用方法使用.  &quot;com.unity.nuget.newtonsof..."
  },
  {
    "title": "[LookDev开发] 定制Unity搜索",
    "url": "/posts/LookDev%E5%BC%80%E5%8F%91-%E5%AE%9A%E5%88%B6Unity%E6%90%9C%E7%B4%A2/",
    "categories": "Unity, 编辑器",
    "tags": "Unity, lookdev, 编辑器, 自定义",
    "date": "2025-05-13 00:00:00 +0800",
    "content": "[LookDev开发] 定制Unity搜索  原理  前端代码  参考网页  Unity Search - Unity 手册"
  },
  {
    "title": "[LookDev开发] 定制Unity编辑器界面布局",
    "url": "/posts/LookDev%E5%BC%80%E5%8F%91-%E5%AE%9A%E5%88%B6Unity%E7%BC%96%E8%BE%91%E5%99%A8%E7%95%8C%E9%9D%A2%E5%B8%83%E5%B1%80/",
    "categories": "Unity, 编辑器",
    "tags": "Unity, lookdev, 编辑器, 自定义",
    "date": "2025-05-08 00:00:00 +0800",
    "content": "[LookDev开发] 定制Unity编辑器界面布局  原理  unity的界面是通过调用一个.mode文件来进行初始化的, 同样也可以通过自定义.mode文件来制作我们自己的初始化界面  前端代码  打印Unity目前载入的所有的界面布局  foreach (string modeName in ModeService.modeNames) {     Debug.Log(modeName..."
  },
  {
    "title": "Scene场景中Bloom阈值超过1时不生效",
    "url": "/posts/Scene%E5%9C%BA%E6%99%AF%E4%B8%ADBloom%E9%98%88%E5%80%BC%E8%B6%85%E8%BF%871%E6%97%B6%E4%B8%8D%E7%94%9F%E6%95%88/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, Bloom, 不生效, 失效, HDR, Buffer",
    "date": "2025-04-25 00:00:00 +0800",
    "content": "Scene场景中Bloom阈值超过1时不生效  00 现象  当后处理Bloom的Threshold值设定超过1时, Bloom效果不生效  01 处理方法  检查场景中相机的Tag, 确保有一个相机为MainCamera, 且该相机开启了HDR  02 原因  因为Unity的场景相机的Buffer是以Tag为MainCamera的相机为基准设置的. 如果MainCamera不存在或者存在..."
  },
  {
    "title": "PBR基础着色器制作",
    "url": "/posts/PBR%E5%9F%BA%E7%A1%80%E7%9D%80%E8%89%B2%E5%99%A8%E5%88%B6%E4%BD%9C/",
    "categories": "Unity, PBR",
    "tags": "Unity, PBR, Shader, 着色器",
    "date": "2025-04-23 00:00:00 +0800",
    "content": "PBR基础着色器制作  功能图通道分配  基本原则是将因为线性空间转换会引起损失的部分(RGB通道)用来存储无渐变/渐变不重要的信息, 而无损失的部分用来存储渐变重要的信息.     R通道: 金属度(非0即1, 渐变不重要)   G通道: AO, 渐变即便是不精准, 也不会有太大的感受, 且与PBR光照运算无关   B通道: 用来存储DetailMask或留空   A通道: 用来存储光滑度"
  },
  {
    "title": "着色器语法解析02",
    "url": "/posts/%E7%9D%80%E8%89%B2%E5%99%A8%E8%AF%AD%E6%B3%95%E8%A7%A3%E6%9E%9002/",
    "categories": "URP, 着色器",
    "tags": "URP, 着色器, Shader",
    "date": "2025-03-19 00:00:00 +0800",
    "content": "着色器语法解析02      官方文档      通用渲染管线概述 | Universal RP | 12.1.1 (unity3d.com)      Unity - Manual: The Shader class (unity3d.com)      SubShader块      Unity - Manual: ShaderLab: defining a SubShader (uni..."
  },
  {
    "title": "着色器语法解析01",
    "url": "/posts/%E7%9D%80%E8%89%B2%E5%99%A8%E8%AF%AD%E6%B3%95%E8%A7%A3%E6%9E%9001/",
    "categories": "URP, 着色器",
    "tags": "URP, 着色器, Shader",
    "date": "2025-03-19 00:00:00 +0800",
    "content": "着色器语法解析01  官方文档  通用渲染管线概述 | Universal RP | 12.1.1 (unity3d.com)  Propertise块  Unity - Manual: ShaderLab: defining material properties (unity3d.com)  Unity - Scripting API: MaterialPropertyDrawer (u..."
  },
  {
    "title": "着色器语法解析00",
    "url": "/posts/%E7%9D%80%E8%89%B2%E5%99%A8%E8%AF%AD%E6%B3%95%E8%A7%A3%E6%9E%9000/",
    "categories": "URP, 着色器",
    "tags": "URP, 着色器, Shader",
    "date": "2025-03-19 00:00:00 +0800",
    "content": "着色器语法解析00  官方文档  通用渲染管线概述 | Universal RP | 12.1.1 (unity3d.com)  基础着色器(Shader)文件模板解析  Shader文件  //代码块说明中, &quot;_&quot;代表&quot;空格&quot;; //请切换到英文输入法, 大部分的中文标点会导致程序报错.  //Shader{} //其中Shader_&quot;string&quot; //string: 该参数代表着色器..."
  },
  {
    "title": "内网npm私服Package配置",
    "url": "/posts/%E5%86%85%E7%BD%91npm%E7%A7%81%E6%9C%8DPackage%E9%85%8D%E7%BD%AE/",
    "categories": "Unity, Package",
    "tags": "Unity, Package, npm",
    "date": "2025-03-19 00:00:00 +0800",
    "content": "内网npm私服Package配置  修改manifest.json文件     路径: [项目文件夹名]/Packages/manifest.json   添加下载地址          在scopedRegistries块增加如下代码      {     &quot;name&quot;: &quot;Surender&quot;,     &quot;url&quot;: &quot;http://172.16.10.34:4873&quot;,     &quot;sco..."
  },
  {
    "title": "UModel逆向拆解流程",
    "url": "/posts/UModel%E9%80%86%E5%90%91%E6%8B%86%E8%A7%A3%E6%B5%81%E7%A8%8B/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2024-08-08 00:00:00 +0800",
    "content": "UModel逆向拆解流程  00 步骤     软件准备            UModel: UE Viewer | Gildor’s Homepage       Blender: blender.org - Home of the Blender project - Free and Open 3D Creation Software       Blender psk导入插件: Un..."
  },
  {
    "title": "微软商城应用因为使用VPN无法访问网络",
    "url": "/posts/%E5%BE%AE%E8%BD%AF%E5%95%86%E5%9F%8E%E5%BA%94%E7%94%A8%E5%9B%A0%E4%B8%BA%E4%BD%BF%E7%94%A8VPN%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%BD%91%E7%BB%9C/",
    "categories": "软件",
    "tags": "微软, 软件, 网络, VPN",
    "date": "2024-08-05 00:00:00 +0800",
    "content": "微软商城应用因为使用VPN无法访问网络  00 前言  开启VPN后, 会遇到微软商城应用无法访问网络的问题. 原因是因为微软运行商城应用本质上是在一个沙盒里. 在默认的情况下, 这些应用被禁止访问本地的Localhost, 也自然导致该沙盒无法直接使用到系统的VPN.  01 处理方法          官方解除限制工具CheckNetIsolation.exe, 步骤如下:       ..."
  },
  {
    "title": "使用UIToolKit制作面板",
    "url": "/posts/%E4%BD%BF%E7%94%A8UIToolKit%E5%88%B6%E4%BD%9C%E9%9D%A2%E6%9D%BF/",
    "categories": "Unity, UI",
    "tags": "Unity, UI, UIToolKit",
    "date": "2024-07-23 00:00:00 +0800",
    "content": "使用UIToolKit制作面板  00 制作Editor面板  00.0 点击生成按钮  在Project面板中右键菜单选择Create-&amp;gt;UI Toolkit-&amp;gt;Editor Window    00.1 选择模板文件  输入名称后, 其中UXML和USS是EditorWindow的布局和样式文件, Action可以选择只创建文件或者创建并在UIBuilder中打开, UXML..."
  },
  {
    "title": "贴花(Decal)实现",
    "url": "/posts/%E8%B4%B4%E8%8A%B1(Decal)%E5%AE%9E%E7%8E%B0/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2024-07-17 00:00:00 +0800",
    "content": "贴花(Decal)实现  00 前言  01 处理方法  参考网页  Unity Decal 贴花基础入门(2023) - 知乎 (zhihu.com)"
  },
  {
    "title": "使用Lut进行色调变化",
    "url": "/posts/%E4%BD%BF%E7%94%A8Lut%E8%BF%9B%E8%A1%8C%E8%89%B2%E8%B0%83%E5%8F%98%E5%8C%96/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2024-07-10 00:00:00 +0800",
    "content": "使用Lut进行色调变化  00 前言  Lut采样在Unity中的一次应用.  01 处理方法  代码来源:  着色调用在Unity的后处理模块中有对应函数, 由于后处理模块内置URP. 这部分函数直接使用即可.  Library/PackageCache/com.unity.render-pipelines.universal@14.0.9/Shaders/PostProcessing/U..."
  },
  {
    "title": "法线混合方式",
    "url": "/posts/%E6%B3%95%E7%BA%BF%E6%B7%B7%E5%90%88%E6%96%B9%E5%BC%8F/",
    "categories": "URP, 后处理",
    "tags": "URP, 法线, 法线混合, Blend, 混合",
    "date": "2024-06-19 00:00:00 +0800",
    "content": "法线混合方式  00 前言  01 处理方法  参考网页  法线贴图叠加细节方式【译】 - 知乎 (zhihu.com)  Normal Blend方法总结 - 知乎 (zhihu.com)"
  },
  {
    "title": "屏幕空间(ScreenSpace)反射",
    "url": "/posts/%E5%B1%8F%E5%B9%95%E7%A9%BA%E9%97%B4(ScreenSpace)%E5%8F%8D%E5%B0%84/",
    "categories": "URP, 后处理",
    "tags": "URP, 反射, 屏幕空间, ScreenSpace",
    "date": "2024-06-19 00:00:00 +0800",
    "content": "屏幕空间(ScreenSpace)反射  00 前言  01 处理方法  参考网页  Unity StochasticSSR-02 - 知乎 (zhihu.com)  Unity Shader - 深度图基础及应用（转） - 知乎 (zhihu.com)"
  },
  {
    "title": "CRT后处理",
    "url": "/posts/CRT%E5%90%8E%E5%A4%84%E7%90%86/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, CRT, 怀旧",
    "date": "2024-06-19 00:00:00 +0800",
    "content": "CRT后处理  00 前言  01 处理方法  参考网页  超小白向URP Scriptable Render Feature写法——实现老式CRT电视效果！ - 哔哩哔哩 (bilibili.com)"
  },
  {
    "title": "URP线性空间渲染场景伽马空间渲染UI",
    "url": "/posts/URP%E7%BA%BF%E6%80%A7%E7%A9%BA%E9%97%B4%E6%B8%B2%E6%9F%93%E5%9C%BA%E6%99%AF%E4%BC%BD%E9%A9%AC%E7%A9%BA%E9%97%B4%E6%B8%B2%E6%9F%93UI/",
    "categories": "URP, 管线",
    "tags": "URP, 管线, UI, 线性, 伽马",
    "date": "2024-05-23 00:00:00 +0800",
    "content": "URP线性空间渲染场景伽马空间渲染UI  00 前言  Unity的URP管线中, 推荐使用Overlay相机进行UI渲染, Base相机进行场景渲染. 但选择线性空间, 会导致UI渲染的透明度混合出现问题.  01 前置知识  01.0 URP线性流程:          颜色贴图导入时, 会通过sRGB的选项, 进行一次sRGBToLinear的贴图颜色修正(视觉感受是颜色变暗). 关于..."
  },
  {
    "title": "Photoshop到Unity像素级对齐",
    "url": "/posts/Photoshop%E5%88%B0Unity%E5%83%8F%E7%B4%A0%E7%BA%A7%E5%AF%B9%E9%BD%90/",
    "categories": "Unity, DCC",
    "tags": "Unity, DCC, Photoshop, PS, UI",
    "date": "2024-05-22 00:00:00 +0800",
    "content": "Photoshop到Unity像素级对齐  00 前言  UI设计师在PhotoShop中做图, 到UI界面会产生色差.  01 处理方法  01.0 第一步 - 管线设置(前端/TA)  01.0.0 Linear空间  使用定制管线, 做如下设置.    01.0.1 Gamma空间下  无需专门的设置  01.1 第二步 - Unity设置(前端/UI)  01.1.0 Unity贴图..."
  },
  {
    "title": "Unity对应UI的Photoshop设置",
    "url": "/posts/Unity%E5%AF%B9%E5%BA%94UI%E7%9A%84Photoshop%E8%AE%BE%E7%BD%AE/",
    "categories": "URP, UI",
    "tags": "URP, UI, Photoshop, PS, Unity",
    "date": "2024-05-15 00:00:00 +0800",
    "content": "Unity对应UI的Photoshop设置  00 前言  Photophop中, 设计师出的图, 与Unity中的颜色对应不上. 此处先不讨论Gamma空间和Linear空间的转换, 先处理Photoshop与Unity颜色不对应的情况.  01 处理方法  PhotoShop设置  新文件(在新建文件之前进行如下设置)          编辑 -&amp;gt; 颜色设置 -&amp;gt; 设置, 选..."
  },
  {
    "title": "预积分皮肤(TODO)",
    "url": "/posts/%E9%A2%84%E7%A7%AF%E5%88%86%E7%9A%AE%E8%82%A4(TODO)/",
    "categories": "URP, 渲染",
    "tags": "URP, PBR, 渲染, 皮肤, 预积分",
    "date": "2024-04-29 00:00:00 +0800",
    "content": "预积分皮肤(TODO)  00 前言  01 处理方法  参考网页  Pre-Integrated Skin Shading 的常见问题解答 - 知乎 (zhihu.com)  预积分皮肤次表面散射LUT研究实践与遇到的问题 - 知乎 (zhihu.com)  Unity HDRP中的次表面散射材质 - 知乎 (zhihu.com)"
  },
  {
    "title": "基于RendererFeature的后处理(一)",
    "url": "/posts/%E5%9F%BA%E4%BA%8ERendererFeature%E7%9A%84%E5%90%8E%E5%A4%84%E7%90%86(%E4%B8%80)/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, RendererFeature",
    "date": "2024-04-06 00:00:00 +0800",
    "content": "基于RendererFeature的后处理(一)  00 前言  按照傻瓜教程的方式记录URP中基于RendererFeature的后处理的制作方式. 期望整理完之后能得到一个较为规范的后处理制作方式.  01 获得材质球  无论是如何制作的后处理, 本质上还是要基于一个材质球对指定的图像进行处理, 分为以下两种情况:     当你需要一个RendererFeature中用到多个材质球的时候..."
  },
  {
    "title": "翻转法线遇到的SubMesh的坑",
    "url": "/posts/%E7%BF%BB%E8%BD%AC%E6%B3%95%E7%BA%BF%E9%81%87%E5%88%B0%E7%9A%84SubMesh%E7%9A%84%E5%9D%91/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2024-03-21 00:00:00 +0800",
    "content": "翻转法线遇到的SubMesh的坑  00 前言  翻转法线时导致SubMesh丢失.  01 过程  首先, 通常3D美术认为的翻转法线, 即连法线和渲染面一并翻转. 但实际上在Unity中是两个操作. 不仅要翻转法线, 同时也要”翻转”模型”triangles”的构建方式, 才能达到DCC软件中的翻转法线的效果.  翻转”triangles”的方式很简单, 即把三角面的构建方式从”顺时针变..."
  },
  {
    "title": "体积光和高度雾",
    "url": "/posts/%E4%BD%93%E7%A7%AF%E5%85%89%E5%92%8C%E9%AB%98%E5%BA%A6%E9%9B%BE/",
    "categories": "URP, 渲染",
    "tags": "URP, 渲染, 体积光, 高度雾",
    "date": "2024-03-20 00:00:00 +0800",
    "content": "体积光和高度雾  00 前言  01 处理方法  参考网页     Unity-Technologies/VolumetricLighting: Lighting effects implemented for the Adam demo: volumetric fog, area lights and tube lights (github.com)   MaxwellGengYF/Uni..."
  },
  {
    "title": "Unity大量Meta文件Git冲突",
    "url": "/posts/Unity%E5%A4%A7%E9%87%8FMeta%E6%96%87%E4%BB%B6Git%E5%86%B2%E7%AA%81/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2024-03-19 00:00:00 +0800",
    "content": "Unity大量Meta文件Git冲突  00 前言  如果你遇到了大量Meta文件Git冲突, 同时仅仅是guid的变更. 原因可能是因为untrack的文件占用了已经有的guid, 然后导致已经有的guid发生变更, 而变更后的guid又占用了已有的guid, 导致恶性循环, 最终整个工程的meta文件全变更. 在大规模协作时有概率遇到.  01 处理方法          首先, 将没有..."
  },
  {
    "title": "PNG转TGA",
    "url": "/posts/PNG%E8%BD%ACTGA/",
    "categories": "豆知识, 贴图",
    "tags": "贴图, PNG, TGA",
    "date": "2024-03-12 00:00:00 +0800",
    "content": "PNG转TGA  00 前言  01 处理方法  1、Layer-&amp;gt;Layer Mask-&amp;gt;From Transparency  2、Shift-click禁用Mask可以在Photoshop中预览不透明的图像效果（类似TGA的预览效果，也可以切换到通道面板预览对应的通道）  3、复制Layer Mask通道作为Alpha通道，然后另存为TGA即可  原文链接：https://b..."
  },
  {
    "title": "烘焙参数设置",
    "url": "/posts/%E7%83%98%E7%84%99%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE/",
    "categories": "URP, 烘焙",
    "tags": "URP, 烘焙, Bake",
    "date": "2024-03-10 00:00:00 +0800",
    "content": "烘焙参数设置  00 前言     官方烘焙QA: Official - Lightmapping Troubleshooting Guide - Unity Forum   新的自动光照UV的方式: [Official - 2020.1] New Feature - Auto Pack Margin - Unity Forum   Global Illumination - Unity F..."
  },
  {
    "title": "射灯投影LightCookie",
    "url": "/posts/%E5%B0%84%E7%81%AF%E6%8A%95%E5%BD%B1LightCookie/",
    "categories": "URP, 场景",
    "tags": "URP, 场景, LightCookie",
    "date": "2024-02-27 00:00:00 +0800",
    "content": "射灯投影LightCookie  00 时间线        01 处理方法  参考网页  https://blog.unity.com/engine-platform/create-high-quality-light-fixtures-in-unity"
  },
  {
    "title": "编辑器扩展Gizmos",
    "url": "/posts/%E7%BC%96%E8%BE%91%E5%99%A8%E6%89%A9%E5%B1%95Gizmos/",
    "categories": "URP, 后处理",
    "tags": "编辑器, Gizmos",
    "date": "2024-02-19 00:00:00 +0800",
    "content": "编辑器扩展Gizmos  00 前言  01 处理方法  参考网页  Unity Gizmos使用绘制-CSDN博客  InitializeOnLoad、InitializeOnLoadMethod、RuntimeInitializeOnLoadMethod特性的使用-CSDN博客  UnityToolchainsTrick/Assets/Editor/Examples/Example_23..."
  },
  {
    "title": "基于LUT的ToneMapping",
    "url": "/posts/%E5%9F%BA%E4%BA%8ELUT%E7%9A%84ToneMapping/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2024-02-19 00:00:00 +0800",
    "content": "基于LUT的ToneMapping  00 前言  01 处理方法  参考网页  【UE4ToUnity】ColorGrade&amp;amp;Tonemap - 知乎 (zhihu.com)  如何制作LUT贴图，并应用到unity中？ - 知乎 (zhihu.com)  Color Grading (catlikecoding.com)  浅谈Unity URP中LUT的应用 - 知乎 (zhi..."
  },
  {
    "title": "场景渲染手册",
    "url": "/posts/%E5%9C%BA%E6%99%AF%E6%B8%B2%E6%9F%93%E6%89%8B%E5%86%8C/",
    "categories": "URP, 场景",
    "tags": "URP, 场景, 渲染",
    "date": "2024-02-19 00:00:00 +0800",
    "content": "场景渲染手册  00 前言  01 工程目录结构     Assets            Scenes                    Scenes00           Scenes01           …                       Settings                    Mobile//管线Asset及其使用的RendererData文件..."
  },
  {
    "title": "卡通渲染",
    "url": "/posts/%E5%8D%A1%E9%80%9A%E6%B8%B2%E6%9F%93/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2024-02-03 00:00:00 +0800",
    "content": "卡通渲染  00 前言  01 处理方法  参考网页  JasonMa0012/JTRP: JTRP : Unity HDRP ToonShading Render Pipeline (Preview) (github.com)  ChiliMilk/URP_Toon: A Toon Shader in Unity Universal Render Pipeline. (github.com)"
  },
  {
    "title": "水体渲染",
    "url": "/posts/%E6%B0%B4%E4%BD%93%E6%B8%B2%E6%9F%93/",
    "categories": "URP, 渲染",
    "tags": "URP, 渲染, 材质",
    "date": "2024-01-24 00:00:00 +0800",
    "content": "水体渲染  00 前言  01 处理方法  参考网页  [GitHub] Unity中实现水、海洋以及液体模拟的仓库合集 - 简书 (jianshu.com)  Boat Attack 项目海水技术解析 - 知乎 (zhihu.com)  ChiliMilk/URP_Water: Water shader in unity urp. (github.com)  Unity URP真实感水体渲..."
  },
  {
    "title": "Git拉取失败22端口解决办法",
    "url": "/posts/Git%E6%8B%89%E5%8F%96%E5%A4%B1%E8%B4%A522%E7%AB%AF%E5%8F%A3%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/",
    "categories": "Git",
    "tags": "Git, 22, 拉取失败",
    "date": "2024-01-24 00:00:00 +0800",
    "content": "Git拉取失败22端口解决办法  00 前言  使用ssh后, 仍旧拉取失败.  命令行报错  C:\Windows\system32&amp;gt;ssh -vT git@github.com OpenSSH_for_Windows_8.1p1, LibreSSL 3.0.2 debug1: Connecting to github.com [20.205.243.166] port 22. de..."
  },
  {
    "title": "逆向分析URP管线",
    "url": "/posts/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90URP%E6%9E%B6%E6%9E%84/",
    "categories": "逆向, URP",
    "tags": "URP, 逆向, 渲染管线",
    "date": "2024-01-12 00:00:00 +0800",
    "content": "逆向分析URP管线  00 前言  01 处理方法  参考网页  [Unity] 用 Rider 的 PlantUML 畫出專案程式架構圖 (MacOS) – 熱血剪貼部 (scissor.tw)  PlantUmlClassDiagramGenerator/README.zh-CN.md at master · pierre3/PlantUmlClassDiagramGenerator (..."
  },
  {
    "title": "下雨雨滴制作",
    "url": "/posts/%E4%B8%8B%E9%9B%A8%E9%9B%A8%E6%BB%B4%E5%88%B6%E4%BD%9C/",
    "categories": "URP, 天气",
    "tags": "URP, 天气, 雨滴",
    "date": "2024-01-07 00:00:00 +0800",
    "content": "下雨雨滴制作  00 前言  01 处理方法  参考网页  Unity Shader 实现雨天的水面涟漪效果 - 知乎 (zhihu.com)//时间差  用WebGL实现雨打屏幕 - 知乎 (zhihu.com)   关于实时的天气模拟&amp;amp;渲染，涉及的较为经典或者目前最先进的技术和做法有哪些？ - 知乎 (zhihu.com)  游戏中雨天效果开发：如何打造“最美下雨天” - 知乎 ..."
  },
  {
    "title": "引擎开发",
    "url": "/posts/%E5%BC%95%E6%93%8E%E5%BC%80%E5%8F%91/",
    "categories": "引擎",
    "tags": "引擎, 底层",
    "date": "2024-01-01 00:00:00 +0800",
    "content": "引擎开发  00 前言  01 处理方法  参考网页  从零开始手敲次世代游戏引擎（五） - 知乎 (zhihu.com)  总结知乎上能找到的几个开源渲染引擎 - 知乎 (zhihu.com)"
  },
  {
    "title": "Photoshop打开DDS",
    "url": "/posts/Photoshop%E6%89%93%E5%BC%80DDS/",
    "categories": "其他",
    "tags": "DDS, Photoshop, PS",
    "date": "2024-01-01 00:00:00 +0800",
    "content": "Photoshop打开DDS  00 处理方法  下载nVidia的官方Photoshop插件或工具即可打开DDS文件. 如果是Photoshop插件, 则依附于Photoshop, 如果重装或卸载后, 该插件需要重新安装.  Texture Tools Exporter | NVIDIA Developer  参考网页"
  },
  {
    "title": "天气系统TOD系统天空盒和体积云",
    "url": "/posts/%E5%A4%A9%E6%B0%94%E7%B3%BB%E7%BB%9FTOD%E7%B3%BB%E7%BB%9F%E5%A4%A9%E7%A9%BA%E7%9B%92%E4%BD%93%E7%A7%AF%E4%BA%91/",
    "categories": "URP, TOD",
    "tags": "URP, TOD, 体积云, 天空盒",
    "date": "2023-12-28 00:00:00 +0800",
    "content": "天气系统TOD系统天空盒体积云  00 前言  01 参考库  wlgys8/URPLearn: A project used for learning Unity Universal Render Pipeline (github.com)  01.0 天空盒     Campo Santo(用阿荣打开)   Unity 卡通渲染 程序化天空盒 - 知乎 (zhihu.com)   Uni..."
  },
  {
    "title": "UnityShader内置变量",
    "url": "/posts/UnityShader%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F/",
    "categories": "URP, 渲染",
    "tags": "URP, Shader, 渲染",
    "date": "2023-12-26 00:00:00 +0800",
    "content": "UnityShader内置变量  00 前言  01 内置着色器变量  Unity 的内置文件包含着色器的全局变量：当前对象的变换矩阵、光源参数、当前时间等等。就像任何其他变量一样，可在着色器程序中使用这些变量，但如果已经包含相关的 include 文件，则不必声明这些变量。  有关 include 文件更多信息，请参阅内置 include 文件。  变换  所有这些矩阵都是 float4x..."
  },
  {
    "title": "景深后处理颜色溢出处理",
    "url": "/posts/%E6%99%AF%E6%B7%B1%E5%90%8E%E5%A4%84%E7%90%86%E9%A2%9C%E8%89%B2%E6%BA%A2%E5%87%BA%E5%A4%84%E7%90%86/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2023-12-22 00:00:00 +0800",
    "content": "景深后处理颜色溢出处理  00 前言  景深后处理开启时, 在物体边缘处会出现颜色溢出的问题.  经过排查, Unity在进行景深的剔除前, 就对景深的原图和Mask进行了模糊处理.  同时, 最根本的原因是深度图并不能”严格”的覆盖漫反射图.  推测原因是两张图片的格式, 深度图为R8, 而屏幕截图是RGB111110Float, 同时由于图片都是Bilinear的Filter方式, 导致..."
  },
  {
    "title": "寻路避障",
    "url": "/posts/%E5%AF%BB%E8%B7%AF%E9%81%BF%E9%9A%9C/",
    "categories": "AI, 寻路",
    "tags": "AI, 寻路, 避障",
    "date": "2023-12-22 00:00:00 +0800",
    "content": "寻路避障  00 前言  01 处理方法  参考网页  避障算法 - VO、RVO 以及 ORCA (RVO2)|移动_新浪新闻 (sina.com.cn)  Unity 万人寻路（dots版本）-CSDN博客  RTS游戏中的避障算法 - 知乎 (zhihu.com)  Unity 使用RVO2(orca)算法_unity orca-CSDN博客  Unity 使用RVO2(orca)算法..."
  },
  {
    "title": "Timeline播放特效时间偏差问题",
    "url": "/posts/Timeline%E6%92%AD%E6%94%BE%E7%89%B9%E6%95%88%E6%97%B6%E9%97%B4%E5%81%8F%E5%B7%AE%E9%97%AE%E9%A2%98/",
    "categories": "Unity, Q&A",
    "tags": "Unity, Q&A, Timeline, 粒子特效",
    "date": "2023-12-21 00:00:00 +0800",
    "content": "Timeline播放特效时间偏差问题  00 Q  Unity2019, Timeline中播放粒子特效, 但其中一个设置了Delay的粒子和初始节奏对不上. 单独播放特效, 或者在另一个工程中播放完成正常.  01 A  查出, Timeline中的粒子计时, 走的是fixedupdate, 即Time设置中的Maximum fixed Time Step会影响其播放偏差. 而通常粒子系统..."
  },
  {
    "title": "PBR基础",
    "url": "/posts/PBR%E5%9F%BA%E7%A1%80/",
    "categories": "Unity, PBR",
    "tags": "Unity, PBR",
    "date": "2023-12-18 00:00:00 +0800",
    "content": "PBR基础  00 前言  Physically Based Rendering的详细笔记.  01 分析  01.1 环境光反射高光部分与遮罩部分  #define UNITY_SPECCUBE_LOD_STEPS 6 // The *approximated* version of the non-linear remapping. It works by // approximatin..."
  },
  {
    "title": "摄像机动画帧出现偏差",
    "url": "/posts/%E6%91%84%E5%83%8F%E6%9C%BA%E5%8A%A8%E7%94%BB%E5%B8%A7%E5%87%BA%E7%8E%B0%E5%81%8F%E5%B7%AE/",
    "categories": "Unity, 动画",
    "tags": "Unity, 动画, 跳帧",
    "date": "2023-12-07 00:00:00 +0800",
    "content": "摄像机动画帧出现偏差  00 前言  01 处理方法  无脑关闭Unity动画的”ReSample”  参考网页"
  },
  {
    "title": "Arm Graphic Analyzer无法连接三星S20解决办法",
    "url": "/posts/Arm-Graphic-Analyzer%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5%E4%B8%89%E6%98%9FS20%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/",
    "categories": "性能测试",
    "tags": "性能测试, Arm, Android, 三星",
    "date": "2023-12-07 00:00:00 +0800",
    "content": "Arm Graphic Analyzer无法连接三星S20解决办法  00 前言  首先处理好”开发者选项”, “USB调试”, “ADB安装”.  Samsung Galaxy S20 连接Arm Graphics Analyzer时, 出现&quot;Coundln&#39;t get the list of install packages&quot;提示.    01 处理方法  原因时因为三星自己的app, ..."
  },
  {
    "title": "ADB命令",
    "url": "/posts/ADB%E5%91%BD%E4%BB%A4/",
    "categories": "性能测试",
    "tags": "性能测试, ADB",
    "date": "2023-12-07 00:00:00 +0800",
    "content": "ADB命令  00 前言  01 详细  01.1 查看全部参数  adb shell getprop  01.2 查看SoC型号  adb shell cat /proc/cpuinfo  例子:  Hardware        : Qualcomm Technologies, Inc KONA    参考网页  ADB 命令大全 - 知乎 (zhihu.com)  adb查看手机硬件信..."
  },
  {
    "title": "部分手机后处理真机显示错误的问题解决",
    "url": "/posts/%E9%83%A8%E5%88%86%E6%89%8B%E6%9C%BA%E5%90%8E%E5%A4%84%E7%90%86%E7%9C%9F%E6%9C%BA%E6%98%BE%E7%A4%BA%E9%94%99%E8%AF%AF%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2023-12-05 00:00:00 +0800",
    "content": "部分手机后处理真机显示错误的问题解决  00 前言  昨天项目组(Unity2019.4.15f1)报出的在vivo Ytt7上面, 景深后处理失效(具体表现为模糊部分直接没有做渲染, 叠加在原图上).  01 处理方法  Unity景深部分的Shaderlab代码, program target 都被设定为3.5或4.5, 而由于Unity本身的版本(2019)过于老旧, 导致编译出的中间..."
  },
  {
    "title": "逆向分析",
    "url": "/posts/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/",
    "categories": "性能测试",
    "tags": "第三方, 逆向, 截帧, 性能测试, GPA, CSV, Mesh",
    "date": "2023-12-05 00:00:00 +0800",
    "content": "逆向分析  00 前言          GPA截取出来的HLSL代码, 要注意, Unity的内置矩阵(类似unity_ObjectToWorld等)编译出来的代码, 实际上无法直接用于shader. 因为大概率hlslcc_mtxunity_ObjectToWorld与unity_ObjectToWorld互为转置矩阵.                      原因是Unity在编译时..."
  },
  {
    "title": "环境贴图八面体映射",
    "url": "/posts/%E7%8E%AF%E5%A2%83%E8%B4%B4%E5%9B%BE%E5%85%AB%E9%9D%A2%E4%BD%93%E6%98%A0%E5%B0%84/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2023-12-05 00:00:00 +0800",
    "content": "环境贴图八面体映射  00 前言  01 处理方法  参考网页  八面体参数化球面映射方式及实现 - 知乎 (zhihu.com)"
  },
  {
    "title": "其他官方电子书或工程导航",
    "url": "/posts/%E5%85%B6%E4%BB%96%E5%AE%98%E6%96%B9%E7%94%B5%E5%AD%90%E4%B9%A6%E6%88%96%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%88%AA/",
    "categories": "电子书, 其他",
    "tags": "电子书, 其他, 贴花",
    "date": "2023-12-05 00:00:00 +0800",
    "content": "其他官方电子书或工程导航  01 GPU原理  How GPU Computing Works | NVIDIA On-Demand  02 渲染器  Nori光追渲染器 - 知乎 (zhihu.com)  wjakob/nori: Nori: an educational ray tracer (github.com)  03 渲染   游戏开发的一些前沿技术在哪里能浏览到? - 知乎 (..."
  },
  {
    "title": "关于渲染优化剔除部分.",
    "url": "/posts/%E5%85%B3%E4%BA%8E%E6%B8%B2%E6%9F%93%E4%BC%98%E5%8C%96%E5%89%94%E9%99%A4%E9%83%A8%E5%88%86/",
    "categories": "优化",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2023-12-05 00:00:00 +0800",
    "content": "关于渲染优化剔除部分.  00 前言  01 处理方法  参考网页  Compute Shader 进阶应用:结合Hi-Z 剔除海量草渲染 - 知乎 (zhihu.com)"
  },
  {
    "title": "sRGB与Gamma",
    "url": "/posts/sRGB%E4%B8%8EGamma/",
    "categories": "其他, 色彩空间",
    "tags": "其他, 色彩空间, sRGB, Gamma",
    "date": "2023-12-05 00:00:00 +0800",
    "content": "sRGB与Gamma  00 前言  01 处理方法  参考网页  [sRGB色彩空间 - 维基百科，自由的百科全书 (wikipedia.org)  [GraphicsFormat - Unity 脚本 API](https://docs.unity.cn/cn/2020.2/ScriptReference/Experimental.Rendering.GraphicsFormat.htm..."
  },
  {
    "title": "RootAndroid手机",
    "url": "/posts/RootAndroid%E6%89%8B%E6%9C%BA/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2023-12-05 00:00:00 +0800",
    "content": "RootAndroid手机  00 前言  01 处理方法  01.1 打开手机开发者模式     通常操作为点击版本号   具体不同的手机不同, 可以自行搜索方法   01.2 使用Andoird Studio安装ADB工具和USB驱动      01.3 解锁Bootloader  连接手机到电脑, 以下命令行建立在配置好ADB工具, 手机打开开发者模式中的usb调试功能, 命令行模式下..."
  },
  {
    "title": "Google搜索技巧",
    "url": "/posts/Google%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2023-12-05 00:00:00 +0800",
    "content": "Google搜索技巧  00 前言  01 处理方法  参考网页  最详细的GOOGLE搜索指令大全 - 知乎 (zhihu.com)"
  },
  {
    "title": "Custom Package",
    "url": "/posts/Custom-Package/",
    "categories": "Unity, Package",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2023-12-05 00:00:00 +0800",
    "content": "Custom Package  00 前言  01 处理方法  参考网页  Unity - Manual: Creating custom packages (unity3d.com)  [needle-mirror/com.unity.upm.develop: Installs the UPM package development extension. Author new UPM pa..."
  },
  {
    "title": "开源协议许可相关",
    "url": "/posts/%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%E8%AE%B8%E5%8F%AF%E7%9B%B8%E5%85%B3/",
    "categories": "Git, 协议",
    "tags": "Git, 协议",
    "date": "2023-11-28 00:00:00 +0800",
    "content": "开源协议许可相关  00 前言  01 介绍  基本                 特性 / 协议       GPL (v3)       MPL 2.0       MIT                       修改公开       必须公开修改和衍生作品的源代码       修改过的文件必须公开，整个作品可以闭源       不要求公开修改或衍生作品的源代码          ..."
  },
  {
    "title": "MD导出Pdf强制分页",
    "url": "/posts/MD%E5%AF%BC%E5%87%BAPdf%E5%BC%BA%E5%88%B6%E5%88%86%E9%A1%B5/",
    "categories": "文档, MarkDown",
    "tags": "文档, MarkDown, 分页, Typora",
    "date": "2023-11-28 00:00:00 +0800",
    "content": "MD导出Pdf强制分页  00 前言  使用Typora导出Pdf时, 需要强制分页的问题.  01 处理方法  在markdown文本中需要分页的地方添入：  &amp;lt;div STYLE=&quot;page-break-after: always;&quot;&amp;gt;&amp;lt;/div&amp;gt;   参考网页  Markdown文本的强行分页 - 知乎 (zhihu.com)  Typora换页问题请教 · K..."
  },
  {
    "title": "Unity如何连接手机进行测试",
    "url": "/posts/Unity%E5%A6%82%E4%BD%95%E8%BF%9E%E6%8E%A5%E6%89%8B%E6%9C%BA%E8%BF%9B%E8%A1%8C%E6%B5%8B%E8%AF%95/",
    "categories": "性能测试",
    "tags": "URP, 性能测试",
    "date": "2023-11-27 00:00:00 +0800",
    "content": "Unity如何连接手机进行测试  00 前言  性能分析实机测试时, 需要将Unity的Profiler连接到实机进行CPU端的测试.  01 处理方法     首先确认app的包是debuggable   手机开启了开发者   x00 安装ADB  使用Android Studio中的SDK Manager安装ADB  x01 启动app  x02 通过ADB命令连接app  命令行中输入..."
  },
  {
    "title": "Git拉取失败443最终解决办法",
    "url": "/posts/Git%E6%8B%89%E5%8F%96%E5%A4%B1%E8%B4%A5443%E6%9C%80%E7%BB%88%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/",
    "categories": "Git",
    "tags": "Git, 443, 拉取失败",
    "date": "2023-11-25 00:00:00 +0800",
    "content": "Git拉取失败443最终解决办法  00 前言  使用Github DeskTop可以拉取, 而SourceTree拉取报443错误. Git命令行同样无法拉取, 报443连接错误.  01 处理方法  最根本的原因是: Github的账号和密码验证服务器没有走梯子. 当然我们可以用全局代理配置的方式来强制使用梯子, 但始终会遇到有时可以验证有时无法验证的情况.  最稳定的解决方式是采用ss..."
  },
  {
    "title": "Canvas对象渲染到RenderTexture在Windows下打包不显示的问题",
    "url": "/posts/Canvas%E5%AF%B9%E8%B1%A1%E6%B8%B2%E6%9F%93%E5%88%B0RenderTexture%E5%9C%A8Windows%E4%B8%8B%E6%89%93%E5%8C%85%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/",
    "categories": "URP, 疑难杂症",
    "tags": "URP, 坑, 疑难杂症",
    "date": "2023-11-21 00:00:00 +0800",
    "content": "Canvas对象渲染到RenderTexture在Windows下打包不显示的问题  00 前言  引发Bug的具体情况是:     用一个Camera赋值到Canvas   将Camera的Display选择为Display1之外的其他显示   然后给这个相机一个RenderTexture对象(此时Display的选项消失)   表现为: 此时Canvas下的所有Canvas相关的对象, ..."
  },
  {
    "title": "结构体和类的选用标准",
    "url": "/posts/%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E7%B1%BB%E7%9A%84%E9%80%89%E7%94%A8%E6%A0%87%E5%87%86/",
    "categories": "代码, 基础知识",
    "tags": "代码, 基础知识, 结构体, 类",
    "date": "2023-11-17 00:00:00 +0800",
    "content": "结构体和类的选用标准  00 前言  哪种情况下使用结构体和哪种情况下使用类?  01 处理方法  在 C# 中，选择使用结构体 (struct) 或类 (class) 取决于几个关键因素。这些因素包括对象的大小、不变性、值语义与引用语义的需求等。以下是一些指导原则：  使用结构体 (struct) 的情况：     表示简单的数据结构：如果您要表示一个小型的数据结构，如坐标点、颜色值等，结..."
  },
  {
    "title": "URP中基于ShaderFeature和ComputeShader的OverDraw工具",
    "url": "/posts/URP%E4%B8%AD%E5%9F%BA%E4%BA%8EShaderFeature%E5%92%8CComputeShader%E7%9A%84OverDraw%E5%B7%A5%E5%85%B7/",
    "categories": "URP, 工具",
    "tags": "URP, 工具, OverDraw, 优化, Inspector只读字段, computeshader",
    "date": "2023-11-07 00:00:00 +0800",
    "content": "URP中基于ShaderFeature和ComputeShader的OverDraw工具  00 前言  01 处理方法  目前采用的方式是使用context.DrawRenderers方法中的drawSettings.overrideMaterial = _material;, 进行替代渲染. 核心方法见下方代码:  private void DrawRenderers(Scriptabl..."
  },
  {
    "title": "移动端性能优化",
    "url": "/posts/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/",
    "categories": "优化",
    "tags": "Unity, 优化, 移动端",
    "date": "2023-11-06 00:00:00 +0800",
    "content": "移动端性能优化  00 前言  01 检测工具  01.1  Android GPU Inspector  google出品的GPU性能检测工具(包含部分CPU数据, 需要详细的CPU数据直接使用Android Studio). 本质上是调用了各个厂商的GPU分析工具. 但支持的设备仍旧有限. 如下表(截止2023年12月5日).                 设备名称       GPU..."
  },
  {
    "title": "数据结构",
    "url": "/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",
    "categories": "代码, 数据",
    "tags": "代码, 数据, 数据结构",
    "date": "2023-11-05 00:00:00 +0800",
    "content": "数据结构  00 前言  01 处理方法  参考网页  ※※※官方MOD指南（中文版）※※※ - 《暗黑地牢》 - 3DMGAME论坛 - Powered by Discuz!"
  },
  {
    "title": "数据拟合",
    "url": "/posts/%E6%95%B0%E6%8D%AE%E6%8B%9F%E5%90%88/",
    "categories": "数学",
    "tags": "数学, 拟合, 曲线",
    "date": "2023-11-05 00:00:00 +0800",
    "content": "数据拟合  00 前言  01 处理方法  参考网页  数据拟合（Data Fitting）算法 - 知乎 (zhihu.com)"
  },
  {
    "title": "Rider如何加入特定的缩写",
    "url": "/posts/Rider%E5%A6%82%E4%BD%95%E5%8A%A0%E5%85%A5%E7%89%B9%E5%AE%9A%E7%9A%84%E7%BC%A9%E5%86%99/",
    "categories": "IDE, Rider",
    "tags": "IDE, Rider, 缩写",
    "date": "2023-11-05 00:00:00 +0800",
    "content": "Rider如何加入特定的缩写  00 前言  Rider大部分情况下并不会识别一些特殊的缩写, 比如”MS”, 比如”SRGB”, 比如”OS”, 等等.  查看Rider的说明文档给了我们一个加入缩略词的有界面的方案, 却没有给我们删除这个词的方案, 下面让我们一一解决.  01 处理方法  加入特定缩写  Naming style | JetBrains Rider Documentat..."
  },
  {
    "title": "创建C#风格指南：编写可扩展的更简洁的代码",
    "url": "/posts/%E5%88%9B%E5%BB%BAC-%E9%A3%8E%E6%A0%BC%E6%8C%87%E5%8D%97-%E7%BC%96%E5%86%99%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E6%9B%B4%E7%AE%80%E6%B4%81%E7%9A%84%E4%BB%A3%E7%A0%81/",
    "categories": "代码, 规范",
    "tags": "Unity, 代码, 风格",
    "date": "2023-11-03 00:00:00 +0800",
    "content": "创建C#风格指南：编写可扩展的更简洁的代码  00 前言  本文内容来自创建 C# 风格指南：编写可扩展的更简洁的代码| Unity, c#的代码风格的设置建议.      01 简介  格式化 Unity C# 代码是否只有一种正确的方法？也许不是, 但就项目一致的代码风格达成一致可以使您的团队开发出干净、可读且可扩展的代码库.  这本电子书汇集了行业专家关于如何创建代码风格指南的建议. ..."
  },
  {
    "title": "UGUI下的字体描边(附录UI优化和TextMeshPro字体教程)",
    "url": "/posts/UGUI%E4%B8%8B%E7%9A%84%E5%AD%97%E4%BD%93%E6%8F%8F%E8%BE%B9/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2023-11-02 00:00:00 +0800",
    "content": "UGUI下的字体描边(附录UI优化和TextMeshPro字体教程)  00 前言  先说结论, 请直接使用TextMeshPro.  如果一定要使用UGUI的Text控件. 那么请接着往下看.  UGUI默认的Outline描边, 是采取的复制Mesh并偏移的方式来完成的, 默认只复制4次, 向左上右上左下右下四个方向进行偏移. 这种处理方式的弊端在于, 顶点数的增加. 同时, 要获得好的..."
  },
  {
    "title": "类Wox工具PowerToys",
    "url": "/posts/%E7%B1%BBWox%E5%B7%A5%E5%85%B7PowerToys/",
    "categories": "软件",
    "tags": "工具, Wox, PowerToys",
    "date": "2023-10-26 00:00:00 +0800",
    "content": "类Wox工具PowerToys  00 前言  之前一直使用Wox作为一个便捷工具, 并配合Everything进行文件搜索. 但可惜的是, Wox在2020年3月停止更新了, 随着系统的进化, 一直担心Wox有一天会无法使用. 于是想找一个替代Wox的软件.  01 处理方法  终于, 找到了微软官方提供的PowerToys, 其中的PowerToys Run工具同样实现了文件搜索功能. ..."
  },
  {
    "title": "调用xlua读取lua脚本",
    "url": "/posts/%E8%B0%83%E7%94%A8xlua%E8%AF%BB%E5%8F%96lua%E8%84%9A%E6%9C%AC/",
    "categories": "Unity, 代码",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2023-10-25 00:00:00 +0800",
    "content": "调用xlua读取lua脚本  00 前言  对于一些形如以下格式的数据, 可能需要通过c#去读取这些lua数据.    01 处理方法  首先, 安装xlua, 将Assets和Tools保持路径覆盖到Unity工程中即可. 然后打开工程运行”XLua-&amp;gt;Generate Code”.  之后, 编写以下主类脚本  using System; using System.Collecti..."
  },
  {
    "title": "单例模式",
    "url": "/posts/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/",
    "categories": "Unity, 代码",
    "tags": "Unity, 单例, 代码",
    "date": "2023-10-25 00:00:00 +0800",
    "content": "单例模式  00 前言  关于单例的介绍摘抄如下:      意图：保证一个类仅有一个实例，并提供一个访问它的全局访问点。    主要解决：一个全局使用的类频繁地创建与销毁。    何时使用：当您想控制实例数目，节省系统资源的时候。    如何解决：判断系统是否已经有这个单例，如果有则返回，如果没有则创建。    关键代码：构造函数是私有的。    应用实例：         1、一个班级只..."
  },
  {
    "title": "Unity中泛型类中的公开字段无法给Inspector",
    "url": "/posts/Unity%E4%B8%AD%E6%B3%9B%E5%9E%8B%E7%B1%BB%E4%B8%AD%E7%9A%84%E5%85%AC%E5%BC%80%E5%AD%97%E6%AE%B5%E6%97%A0%E6%B3%95%E7%BB%99Inspector/",
    "categories": "Unity, 代码",
    "tags": "Unity, C#, 代码",
    "date": "2023-10-25 00:00:00 +0800",
    "content": "Unity中泛型类中的公开字段无法给Inspector  00 前言  在Unity中泛型的类, 比如  using System; using System.Collections.Generic; using UnityEngine; using XLua;  [Serializable] public class LuaLoader&amp;lt;T&amp;gt; {     public Text..."
  },
  {
    "title": "学习其他游戏的代码",
    "url": "/posts/%E5%AD%A6%E4%B9%A0%E5%85%B6%E4%BB%96%E6%B8%B8%E6%88%8F%E7%9A%84%E4%BB%A3%E7%A0%81/",
    "categories": "代码, C#",
    "tags": "代码, C#, 参考",
    "date": "2023-10-23 00:00:00 +0800",
    "content": "学习其他游戏的代码  00 前言  01 处理方法  参考网页  (38 封私信 / 98 条消息) 哪些开源游戏和开源引擎的代码比较好？求推荐? - 知乎 (zhihu.com)  Rimworld的MOD教程#7#简单的逻辑定义 - 哔哩哔哩 (bilibili.com)  Perfare/Il2CppDumper: Unity il2cpp reverse engineer (gith..."
  },
  {
    "title": "Unity官方电子书或工程导航",
    "url": "/posts/Unity%E5%AE%98%E6%96%B9%E7%94%B5%E5%AD%90%E4%B9%A6%E6%88%96%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%88%AA/",
    "categories": "电子书, Unity",
    "tags": "Unity, 电子书",
    "date": "2023-10-23 00:00:00 +0800",
    "content": "Unity官方电子书或工程导航  00 前言  Unity官方 经常会在Blog中附带电子书用来介绍新的管线或系统. Unity官方的Github账号中也会发布一些工程案例. Unity自己有整合, 但只针对最新的版本. 所以这里以Blog的形式进行整合归类.  官方整合  搜索关键词: e-book, guide, practice, whitepaper  01 电子书    管线   ..."
  },
  {
    "title": "Package内的Shader打包方法",
    "url": "/posts/Package%E5%86%85%E7%9A%84Shader%E6%89%93%E5%8C%85%E6%96%B9%E6%B3%95/",
    "categories": "Unity, Package",
    "tags": "Unity, Package, AssetBundle",
    "date": "2023-10-20 00:00:00 +0800",
    "content": "Package内的Shader打包方法  00 前言  通常的打包方式是采用将工程中的资源设置好AssetBundle名称和扩展名的方式, 再使用:  public static AssetBundleManifest BuildAssetBundles (string outputPath, BuildAssetBundleOptions assetBundleOptions, Build..."
  },
  {
    "title": "Unity启动参数",
    "url": "/posts/Unity%E5%90%AF%E5%8A%A8%E5%8F%82%E6%95%B0/",
    "categories": "Unity, 图形API",
    "tags": "Unity, 启动参数, 图形API",
    "date": "2023-10-19 00:00:00 +0800",
    "content": "Unity启动参数  00 前言  Unity中, 如果以Android平台使用BuildAssetBundles建立着色器的assetbundle后, 通常这类资源在编辑器中加载是无法正常工作的, 原因是在Windows系统下Unity编辑器默认的显示API是DX11, 而Android的着色器API需要是gles.  01 处理方法  通过启动参数的方式, 强制使用gles的API进行渲..."
  },
  {
    "title": "gitignore文件不生效的处理方式",
    "url": "/posts/gitignore%E6%96%87%E4%BB%B6%E4%B8%8D%E7%94%9F%E6%95%88%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F/",
    "categories": "Git",
    "tags": "Git, gitignore",
    "date": "2023-10-18 00:00:00 +0800",
    "content": "gitignore文件不生效的处理方式  00 前言  在.gitignore文件中增加规则后, 之前已经跟踪并上传的文件并不会因为增加的规则而取消跟踪.  原因是, git缓存中已经将之前的文件纳入了版本管理, 此时即便是在.gitignore中声明了忽略也是无法影响这部分文件的.  01 处理方式  git清除本地缓存, 再加入版本管理后提交, 命令行代码如下:  git rm -r -..."
  },
  {
    "title": "关于Unity中DepthOfField的记录",
    "url": "/posts/%E5%85%B3%E4%BA%8EUnity%E4%B8%ADDepthOfField%E7%9A%84%E8%AE%B0%E5%BD%95/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, DepthOfField",
    "date": "2023-10-11 00:00:00 +0800",
    "content": "关于定制Unity中DepthOfField的记录  00 前言          策划需要将景深进行分段控制           直接对深度进行重映射是最方便的做法           https://www.desmos.com/calculator/outz8ciqgx            我希望斜率不仅仅是2, 而是可以是任何值, 且方程连续            y=(x-2a)..."
  },
  {
    "title": "Texture2D：：Gather 方法",
    "url": "/posts/GATHER/",
    "categories": "URP, HLSL",
    "tags": "URP, 后处理, Unity",
    "date": "2023-10-11 00:00:00 +0800",
    "content": "Texture2D：：Gather 方法  00 前言  URP版本14, Unity版本2022, 在分析官方的BokehDepthOfField.shader时发现了以下代码 half4 FragPrefilter(Varyings input) : SV_Target         {             UNITY_SETUP_STEREO_EYE_INDEX_POST_VER..."
  },
  {
    "title": "基于URP14的后处理",
    "url": "/posts/%E5%9F%BA%E4%BA%8EURP14%E7%9A%84%E5%90%8E%E5%A4%84%E7%90%86/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, RendererFeature",
    "date": "2023-09-24 00:00:00 +0800",
    "content": "基于URP14的后处理  00 前言  URP14引入了RTHadle作为RenderTexture的替代进行管理, 写法上也有很多的不同.  01 整体结构  整体结构仍旧由4部分构成     RendererFeature   RenderPass   Volume   Shader   02 RendererFeature  RendererFeature作为向Render中添加Pas..."
  },
  {
    "title": "关于Unity中Bloom的记录",
    "url": "/posts/%E5%85%B3%E4%BA%8EUnity%E4%B8%ADBloom%E7%9A%84%E8%AE%B0%E5%BD%95/",
    "categories": "URP, 后处理",
    "tags": "URP, 后处理, Bloom",
    "date": "2023-09-19 00:00:00 +0800",
    "content": "关于Unity中Bloom的记录  1. 提取亮部  其中, 提取亮部的部分, 只看代码完全不知道做了什么.  half brightness = Max3(color.r, color.g, color.b); half softness = clamp(brightness - Threshold + ThresholdKnee, 0.0, 2.0 * ThresholdKnee); s..."
  },
  {
    "title": "基于Jekyll的Mathjax语法替换",
    "url": "/posts/%E5%9F%BA%E4%BA%8EJekyll%E7%9A%84Mathjax%E8%AF%AD%E6%B3%95%E6%9B%BF%E6%8D%A2/",
    "categories": "其他, Blog",
    "tags": "Jekyll, blog, Mathjax, 公式, 数学",
    "date": "2023-09-17 00:00:00 +0800",
    "content": "基于Jekyll的Mathjax语法替换  1.单行公式  1.1上下标  $f_0$,$f_{a+b}$  $f^2$,$f^{a+b}$​  $^af$,$^{a+b}f$  $_af$,$_{a+b}f$​  $f^a_b$,$f^{a+b}_{c+d}$  $\mathop{A} \limits_{i=0}^n$  $X\stackrel{F}{\longrightarrow}Y$ ..."
  },
  {
    "title": "逆矩阵计算",
    "url": "/posts/%E9%80%86%E7%9F%A9%E9%98%B5%E8%AE%A1%E7%AE%97/",
    "categories": "高数, 线性代数",
    "tags": "高数, 线性代数, 矩阵",
    "date": "2023-09-16 00:00:00 +0800",
    "content": "逆矩阵计算  1. 前置定义  行列式     矩阵A的行列式记作 $\left|A\right|$ 或者 $det(A)$ 或者 $det A$   几何意义为所处空间单位区域的缩放倍数            对于二维空间来说, 即基于组成矩阵$A$的两个向量组成的平行四边形面积.       对于三维空间来说, 即基于组成矩阵$A$的三个向量组成的空间体积.           余子式 ..."
  },
  {
    "title": "基于Jekyll和Github的Blog搭建",
    "url": "/posts/%E5%9F%BA%E4%BA%8EJekyll%E5%92%8CGithub%E7%9A%84Blog%E6%90%AD%E5%BB%BA/",
    "categories": "其他, Blog",
    "tags": "Jekyll, blog",
    "date": "2023-09-10 00:00:00 +0800",
    "content": "基于Jekyll和Github的Blog搭建  0. 起因  搭建一个基于Github Page的博客用来记录学习到的技巧和案例, 之前的选型是Rentry.co - Markdown Pastebin, 但每个文件需要记录一个Edit Code, 以及图床的问题, 于是开始搜索其他的方式. 最终选定了Github Page. 而搭建基于Github Page的博客, 按照官网的建议, 采用..."
  },
  {
    "title": "视锥体剔除",
    "url": "/posts/%E8%A7%86%E9%94%A5%E4%BD%93%E5%89%94%E9%99%A4/",
    "categories": "Unity, ComputeShader",
    "tags": "computeshader, 视锥体剔除",
    "date": "2023-09-09 00:00:00 +0800",
    "content": "[TOC2]  ComputeShader  视锥体剔除  ComputeShader  主函数编译指定  //定义线程编译的函数名称 #pragma kernel FrustumCulling  //该线程的主函数 [numthreads(64,1,1)] void FrustumCulling(uint3 id : SV_DispatchThreadID) { 	if(id.x&amp;gt;=..."
  },
  {
    "title": "关键词",
    "url": "/posts/URP-PBR%E7%9D%80%E8%89%B2%E5%99%A8%E8%B1%86%E7%9F%A5%E8%AF%86-%E5%85%B3%E9%94%AE%E8%AF%8D/",
    "categories": "Unity, Shader",
    "tags": "PBR着色器豆知识",
    "date": "2023-09-09 00:00:00 +0800",
    "content": "[TOC2]  关键词  DYNAMICLIGHTMAP_ON          当物体的GI来源为LightMap                 同时在Lighting中开启Realtime Global Illumination                 此时Generate Lighting后, 该关键词才会激活           考虑到移动端的性能, 暂时去掉该功能, 以简..."
  },
  {
    "title": "URP管线",
    "url": "/posts/URP%E7%AE%A1%E7%BA%BF/",
    "categories": "Unity, URP",
    "tags": "URP, URP管线",
    "date": "2023-09-05 00:00:00 +0800",
    "content": "URP管线  可编程渲染管线          可编程渲染管线简介 - Unity 手册 (unity3d.com)           两个关键的自定义元素                      渲染管线实例          继承自RenderPipeline并覆盖其Render()方法.                       渲染管线资源          用于存储有关所使用..."
  },
  {
    "title": "ShaderModel",
    "url": "/posts/ShaderModel/",
    "categories": "Unity, 豆知识",
    "tags": "PBR着色器豆知识",
    "date": "2023-09-05 00:00:00 +0800",
    "content": "ShaderModel  相关页面          SystemInfo-graphicsShaderLevel - Unity 脚本 API      图形设备着色器功能级别（只读）。      此为近似的图形设备“着色器功能”级别，以 DirectX 着色器模型术语表述。 可能的值为：      50 Shader Model 5.0 (DX11.0) 46 OpenGL 4.1 功能..."
  }
  
]

